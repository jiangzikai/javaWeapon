为什么不用静态常量来替代枚举类呢？
    public static final int SEASON_SPRING = 1;
    public static final int SEASON_SUMMER = 2;
    public static final int SEASON_FALL = 3;
    public static final int SEASON_WINTER = 4;

枚举类更加直观，类型安全。使用常量会有以下几个缺陷：

　　1. 类型不安全。若一个方法中要求传入季节这个参数，用常量的话，形参就是int类型，
        开发者传入任意类型的int类型值就行，但是如果是枚举类型的话，就只能传入枚举类中包含的对象。

　　2. 没有命名空间。开发者要在命名的时候以SEASON_开头，
        这样另外一个开发者再看这段代码的时候，才知道这四个常量分别代表季节。

枚举的理解：
简单说，枚举可以限定取值范围，所有的内容只能从指定范围中取得.
比如性别，只有男和女，其他值都是不合法的
如果不用枚举也可以构造这样的方法，但可能要做更多的工作，也可能不安全
但运用枚举，就可以避免这些问题了


要点：

使用的是enum关键字而不是class。
多个枚举变量直接用逗号隔开。
枚举变量最好大写，多个单词之间使用”_”隔开（比如：INT_SUM）。
定义完所有的变量后，以分号结束，如果只有枚举变量，而没有自定义变量，分号可以省略（例如上面的代码就忽略了分号）。
在其他类中使用enum变量的时候，只需要【类名.变量名】就可以了，和使用静态变量一样。
但是这种简单的使用(SizeEnum_3类示例)显然不能体现出枚举的强大，我们来学习一下复杂的使用：请见(OrderStatusEnum_4类示例)


参考资料
https://blog.csdn.net/qq_31655965/article/details/55049192

https://www.cnblogs.com/sister/p/4700702.html